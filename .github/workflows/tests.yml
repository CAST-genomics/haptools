name: Tests

on: [pull_request, workflow_call]

jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.7", os: "ubuntu-latest", session: "tests" }
          - { python: "3.8", os: "ubuntu-latest", session: "tests" }
          - { python: "3.9", os: "ubuntu-latest", session: "tests" }
          - { python: "3.10", os: "ubuntu-latest", session: "tests" }
          - { python: "3.11", os: "ubuntu-latest", session: "tests" }
          # - { python: "3.11", os: "windows-latest", session: "tests" }
          - { python: "3.9", os: "macos-latest", session: "tests" }

    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: haptools
          miniforge-variant: Mambaforge
          auto-activate-base: false
          miniforge-version: latest
          channel-priority: strict
          use-mamba: true

      - name: Get Date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Conda env
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs
          key:
            conda-${{ runner.os }}--${{ runner.arch }}--${{ steps.get-date.outputs.today }}-${{ hashFiles('dev-env.yml') }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if dev-env.yml has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Install dev environment
        run:
          mamba env update -n haptools -f dev-env.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run tests with nox
        shell: bash -el {0}
        run: |
          nox --python=${{ matrix.python }}

      - name: Upload coverage data
        if: always() && matrix.session == 'tests'
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: ".coverage.*"

  lint:
    runs-on: ubuntu-latest
    name: lint
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
        version: "23.3.0" # TODO: grab this version directly from the poetry.lock file

  large-files:
    name: File sizes
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Check for large files
        uses: actionsdesk/lfs-warning@v3.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Optional
          filesizelimit: 500000b
          labelName: large-files

name: Tests

on:
  - pull_request

jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.7", os: "ubuntu-latest", session: "lint" }
          - { python: "3.7", os: "ubuntu-latest", session: "tests" }
          - { python: "3.8", os: "ubuntu-latest", session: "tests" }
          - { python: "3.9", os: "ubuntu-latest", session: "tests" }
          - { python: "3.10", os: "ubuntu-latest", session: "tests" }
          # - { python: "3.10", os: "windows-latest", session: "tests" }
          - { python: "3.10", os: "macos-latest", session: "tests" }

    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version
      - name: Upgrade pip in virtual environments
        shell: python
        run: |
          import os
          import pip
          with open(os.environ["GITHUB_ENV"], mode="a") as io:
              print(f"VIRTUALENV_PIP={pip.__version__}", file=io)
      - name: Install Poetry
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt poetry
          poetry --version
      - name: Install Nox
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
          pipx inject --pip-args=--constraint=.github/workflows/constraints.txt nox nox-poetry
          nox --version
      - name: Run Nox
        run: |
          nox --python=${{ matrix.python }}
      - name: Upload coverage data
        if: always() && matrix.session == 'tests'
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: ".coverage.*"
  large-files:
    name: File sizes
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Check for large files
        uses: actionsdesk/lfs-warning@v3.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Optional
          filesizelimit: 500000b
          labelName: large-files

  # coverage:
  #   runs-on: ubuntu-latest
  #   needs: tests
  #   steps:
  #     - name: Check out the repository
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: "3.10"

  #     - name: Upgrade pip
  #       run: |
  #         pip install --constraint=.github/workflows/constraints.txt pip
  #         pip --version
  #     - name: Install Poetry
  #       run: |
  #         pipx install --pip-args=--constraint=.github/workflows/constraints.txt poetry
  #         poetry --version
  #     - name: Install Nox
  #       run: |
  #         pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
  #         pipx inject --pip-args=--constraint=.github/workflows/constraints.txt nox nox-poetry
  #         nox --version
  #     - name: Download coverage data
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: coverage-data

  #     - name: Combine coverage data and display human readable report
  #       run: |
  #         nox --session=coverage
  #     - name: Create coverage report
  #       run: |
  #         nox --session=coverage -- xml
  #     - name: Upload coverage report
  #       uses: codecov/codecov-action@v3.1.0
